{"version":3,"sources":["swiper-wrapper.js"],"names":["$","addLeadingZero","number","toString","padStart","parseNumberValue","setting","defaultValue","undefined","isNaN","parseInt","parseItemValue","parseItemGroupValue","inherit","itemsPerView","setSlideHeight","swiper","$wrapperEl","find","css","height","currentSlide","activeIndex","itemHeight","slides","slidesPerView","params","wrapperHeight","spaceBetween","$el","update","findCenteredSlides","visibleSlides","filter","elOffsetLeft","offset","left","elOffsetRight","outerWidth","each","thisSlideOffsetLeft","this","thisSlideOffsetRight","addClass","removeClass","window","minimogSwiperBP","defaults","361","name","576","768","992","1200","1600","fn","MinimogSwiper","options","$swiper","settings","extend","$wrapControls","$customBtn","$swiperPrev","$swiperNext","$swiperAltArrows","$slider","$sliderInner","children","first","$sliderContainer","sliderSettings","data","items","itemsGroup","gutter","speed","useElementorBreakpoints","hasClass","swiperOptions","desktop","itemsDesktop","widescreen","itemsWideScreen","laptop","itemsLaptop","tablet_extra","itemsTabletExtra","tablet","itemsTablet","mobile_extra","itemsMobileExtra","mobile","itemsMobile","itemsGroupDesktop","itemsGroupWideScreen","itemsGroupLaptop","itemsGroupTabletExtra","itemsGroupTablet","itemsGroupMobileExtra","itemsGroupMobile","gutterDesktop","gutterWideScreen","gutterLaptop","gutterTabletExtra","gutterTablet","gutterMobileExtra","gutterMobile","init","watchSlidesVisibility","slidesPerGroup","resizeObserver","breakpoints","forElementor","elementor","bpValue","elementorFrontendConfig","responsive","finalBreakpoints","previousBP","lastBP","lastBPValue","key","hasOwnProperty","is_enabled","value","swiperBreakpointSettings","watchOverflow","slideColumns","slidesPerColumn","initialSlide","autoHeight","simulateTouch","effect","fadeEffect","crossFade","loop","loopedSlides","centered","centeredSlides","autoplay","delay","disableOnInteraction","autoplayReverseDirection","reverseDirection","freeMode","wrapControls","$wrapControlsWrap","append","nav","customNav","$fractionWrapper","pagination","el","type","clickable","renderCustom","current","total","currentStr","totalStr","renderBullet","index","className","$minimogSwiper","prevText","nextText","navStyle","$swiperNavButtons","$swiperNavButtonsWrap","navAlignedBy","navigation","nextEl","prevEl","$swiperPaginationWrap","$swiperPagination","$swiperPaginationContainerWrap","paginationAlignedBy","paginationType","paginationDynamicBullets","dynamicBullets","paginationText","mousewheel","enabled","vertical","direction","slideToClickedSlide","touchRatio","Swiper","layerTransition","on","verticalAutoHeight","attr","slidesLength","virtual","length","numberOfBullets","Math","ceil","snapGrid","$wrapper","closest","setTimeout","laziestloader","elementorWaypoint","_self","element","llImages","unwrap","trigger","destroy","centeredHightlight","$thisSlide","slidePrev","slideNext","document","jQuery"],"mappings":"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","file":"../../swiper-wrapper.min.js","sourcesContent":["(\n\tfunction( $ ) {\n\t\t'use strict';\n\n\t\twindow.minimogSwiperBP = {\n\t\t\tdefaults: {\n\t\t\t\t361: {\n\t\t\t\t\tname: 'mobile_extra'\n\t\t\t\t},\n\t\t\t\t576: {\n\t\t\t\t\tname: 'tablet'\n\t\t\t\t},\n\t\t\t\t768: {\n\t\t\t\t\tname: 'tablet_extra'\n\t\t\t\t},\n\t\t\t\t992: {\n\t\t\t\t\tname: 'laptop'\n\t\t\t\t},\n\t\t\t\t1200: {\n\t\t\t\t\tname: 'desktop'\n\t\t\t\t},\n\t\t\t\t1600: {\n\t\t\t\t\tname: 'widescreen'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$.fn.MinimogSwiper = function( options ) {\n\t\t\tvar defaults = {},\n\t\t\t    settings = $.extend( true, {}, defaults, options );\n\n\t\t\tvar $swiper;\n\n\t\t\tthis.each( function() {\n\t\t\t\tvar $slider                 = $( this ),\n\t\t\t\t    $sliderInner            = $slider.children( '.swiper-inner' ).first(),\n\t\t\t\t    $sliderContainer        = $sliderInner.children( '.swiper-container' ).first(),\n\t\t\t\t    sliderSettings          = $slider.data(),\n\t\t\t\t    items                   = {},\n\t\t\t\t    itemsGroup              = {},\n\t\t\t\t    gutter                  = {},\n\t\t\t\t    speed                   = parseNumberValue( sliderSettings.speed, 500 ),\n\t\t\t\t    useElementorBreakpoints = $slider.hasClass( 'use-elementor-breakpoints' );\n\n\t\t\t\titems.desktop = parseItemValue( sliderSettings.itemsDesktop, 1 );\n\t\t\t\titems.widescreen = parseItemValue( sliderSettings.itemsWideScreen, items.desktop );\n\t\t\t\titems.laptop = parseItemValue( sliderSettings.itemsLaptop, items.desktop );\n\t\t\t\titems.tablet_extra = parseItemValue( sliderSettings.itemsTabletExtra, items.laptop );\n\t\t\t\titems.tablet = parseItemValue( sliderSettings.itemsTablet, items.tablet_extra );\n\t\t\t\titems.mobile_extra = parseItemValue( sliderSettings.itemsMobileExtra, items.tablet );\n\t\t\t\titems.mobile = parseItemValue( sliderSettings.itemsMobile, items.mobile_extra );\n\t\t\t\titemsGroup.desktop = parseItemGroupValue( sliderSettings.itemsGroupDesktop, items.desktop, items.desktop ); // Slides Per Group, Default same as Slides Per View.\n\t\t\t\titemsGroup.widescreen = parseItemGroupValue( sliderSettings.itemsGroupWideScreen, itemsGroup.desktop, items.widescreen );\n\t\t\t\titemsGroup.laptop = parseItemGroupValue( sliderSettings.itemsGroupLaptop, itemsGroup.desktop, items.laptop );\n\t\t\t\titemsGroup.tablet_extra = parseItemGroupValue( sliderSettings.itemsGroupTabletExtra, itemsGroup.laptop, items.tablet_extra );\n\t\t\t\titemsGroup.tablet = parseItemGroupValue( sliderSettings.itemsGroupTablet, itemsGroup.tablet_extra, items.tablet );\n\t\t\t\titemsGroup.mobile_extra = parseItemGroupValue( sliderSettings.itemsGroupMobileExtra, itemsGroup.tablet, items.mobile_extra );\n\t\t\t\titemsGroup.mobile = parseItemGroupValue( sliderSettings.itemsGroupMobile, itemsGroup.mobile_extra, items.mobile );\n\t\t\t\tgutter.desktop = parseNumberValue( sliderSettings.gutterDesktop, 0 ); // Distance between slides.\n\t\t\t\tgutter.widescreen = parseNumberValue( sliderSettings.gutterWideScreen, gutter.desktop );\n\t\t\t\tgutter.laptop = parseNumberValue( sliderSettings.gutterLaptop, gutter.desktop );\n\t\t\t\tgutter.tablet_extra = parseNumberValue( sliderSettings.gutterTabletExtra, gutter.laptop );\n\t\t\t\tgutter.tablet = parseNumberValue( sliderSettings.gutterTablet, gutter.tablet_extra );\n\t\t\t\tgutter.mobile_extra = parseNumberValue( sliderSettings.gutterMobileExtra, gutter.tablet );\n\t\t\t\tgutter.mobile = parseNumberValue( sliderSettings.gutterMobile, gutter.mobile_extra );\n\n\t\t\t\tvar swiperOptions = $.extend( {}, {\n\t\t\t\t\tinit: false,\n\t\t\t\t\twatchSlidesVisibility: true,\n\t\t\t\t\tslidesPerView: items.mobile,\n\t\t\t\t\tslidesPerGroup: itemsGroup.mobile,\n\t\t\t\t\tspaceBetween: gutter.mobile,\n\t\t\t\t\tresizeObserver: true,\n\t\t\t\t\tbreakpoints: getSwiperBreakpoints( items, itemsGroup, gutter, useElementorBreakpoints )\n\t\t\t\t}, settings );\n\n\t\t\t\tswiperOptions.watchOverflow = true;\n\n\t\t\t\tif ( sliderSettings.slideColumns ) {\n\t\t\t\t\tswiperOptions.slidesPerColumn = sliderSettings.slideColumns;\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.initialSlide ) {\n\t\t\t\t\tswiperOptions.initialSlide = sliderSettings.initialSlide;\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.autoHeight ) {\n\t\t\t\t\tswiperOptions.autoHeight = true;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof sliderSettings.simulateTouch !== 'undefined' && ! sliderSettings.simulateTouch ) {\n\t\t\t\t\tswiperOptions.simulateTouch = false;\n\t\t\t\t}\n\n\t\t\t\tif ( speed ) {\n\t\t\t\t\tswiperOptions.speed = speed;\n\t\t\t\t}\n\n\t\t\t\t// Maybe: fade, flip\n\t\t\t\tif ( sliderSettings.effect ) {\n\t\t\t\t\tswiperOptions.effect = sliderSettings.effect;\n\n\t\t\t\t\tif ( 'fade' === sliderSettings.effect ) {\n\t\t\t\t\t\tif ( 'custom' === sliderSettings.fadeEffect ) {\n\t\t\t\t\t\t\tswiperOptions.fadeEffect = {\n\t\t\t\t\t\t\t\tcrossFade: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswiperOptions.fadeEffect = {\n\t\t\t\t\t\t\t\tcrossFade: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.loop ) {\n\t\t\t\t\tswiperOptions.loop = true;\n\n\t\t\t\t\tif ( sliderSettings.loopedSlides ) {\n\t\t\t\t\t\tswiperOptions.loopedSlides = sliderSettings.loopedSlides;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.centered ) {\n\t\t\t\t\tswiperOptions.centeredSlides = true;\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.autoplay ) {\n\t\t\t\t\tswiperOptions.autoplay = {\n\t\t\t\t\t\tdelay: sliderSettings.autoplay,\n\t\t\t\t\t\tdisableOnInteraction: false\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( sliderSettings.autoplayReverseDirection ) {\n\t\t\t\t\t\tswiperOptions.autoplay.reverseDirection = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.freeMode ) {\n\t\t\t\t\tswiperOptions.freeMode = true;\n\t\t\t\t}\n\n\t\t\t\tvar $wrapControls;\n\n\t\t\t\tif ( sliderSettings.wrapControls ) {\n\t\t\t\t\tvar $wrapControlsWrap = $( '<div class=\"swiper-controls-wrap\"></div>' );\n\t\t\t\t\t$wrapControls = $( '<div class=\"swiper-controls\"></div>' );\n\n\t\t\t\t\t$wrapControlsWrap.append( $wrapControls );\n\t\t\t\t\t$slider.append( $wrapControlsWrap );\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.nav ) {\n\n\t\t\t\t\tif ( sliderSettings.customNav && sliderSettings.customNav !== '' ) {\n\t\t\t\t\t\tvar $customBtn       = $( '#' + sliderSettings.customNav ),\n\t\t\t\t\t\t    $fractionWrapper = $( '.pagination-wrapper', $customBtn ),\n\t\t\t\t\t\t    $swiperPrev      = $customBtn.find( '.slider-prev-btn' ),\n\t\t\t\t\t\t    $swiperNext      = $customBtn.find( '.slider-next-btn' );\n\n\t\t\t\t\t\tif ( $customBtn.hasClass( 'style-02' ) ) {\n\t\t\t\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\t\t\t\tel: $fractionWrapper,\n\t\t\t\t\t\t\t\ttype: 'custom',\n\t\t\t\t\t\t\t\tclickable: true\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\t\t// Convert to string.\n\t\t\t\t\t\t\t\tvar currentStr = current.toString();\n\t\t\t\t\t\t\t\tvar totalStr = total.toString();\n\n\t\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"text\">' + $customBtn.data( 'text' ) + '</div><div class=\"current\">' + currentStr + '</div><div class=\"separator\">/</div><div class=\"total\">' + totalStr + '</div></div>';\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if ( $customBtn.hasClass( 'style-03' ) || $customBtn.hasClass( 'style-04' ) ) {\n\t\t\t\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\t\t\t\tel: $fractionWrapper,\n\t\t\t\t\t\t\t\ttype: 'bullets',\n\t\t\t\t\t\t\t\tclickable: true\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\t\t\treturn '<span class=\"' + className + '\"></span>';\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $swiperPrev = $( '<div class=\"swiper-nav-button swiper-button-prev\"><i class=\"nav-button-icon\"></i><span class=\"nav-button-text\">' + $minimogSwiper.prevText + '</span></div>' );\n\t\t\t\t\t\tvar $swiperNext = $( '<div class=\"swiper-nav-button swiper-button-next\"><i class=\"nav-button-icon\"></i><span class=\"nav-button-text\">' + $minimogSwiper.nextText + '</span></div>' );\n\n\t\t\t\t\t\tif ( '03' === sliderSettings.navStyle ) {\n\t\t\t\t\t\t\tvar $arrowRightSvg = '<svg width=\"24\" height=\"16\" viewBox=\"0 0 24 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1 8L21.2222 8\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M15.7773 1L22.7773 8L15.7773 15\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>';\n\t\t\t\t\t\t\tvar $arrowLeftSvg = '<svg width=\"24\" height=\"16\" viewBox=\"0 0 24 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23 8L2.77778 8\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M8.22266 1L1.22266 8L8.22266 15\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>';\n\t\t\t\t\t\t\t$swiperPrev = $( '<div class=\"swiper-nav-button swiper-button-prev\">' + $arrowLeftSvg + '</div>' );\n\t\t\t\t\t\t\t$swiperNext = $( '<div class=\"swiper-nav-button swiper-button-next\">' + $arrowRightSvg + '</div>' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar $swiperNavButtons = $( '<div class=\"swiper-nav-buttons\"></div>' );\n\t\t\t\t\t\t$swiperNavButtons.append( $swiperPrev ).append( $swiperNext );\n\n\t\t\t\t\t\tvar $swiperNavButtonsWrap = $( '<div class=\"swiper-nav-buttons-wrap\"></div>' );\n\n\t\t\t\t\t\tif ( 'grid' == sliderSettings.navAlignedBy ) {\n\t\t\t\t\t\t\t$swiperNavButtonsWrap.append( '<div class=\"container\"><div class=\"row\"><div class=\"col-sm-12\"></div></div></div>' );\n\t\t\t\t\t\t\t$swiperNavButtonsWrap.find( '.col-sm-12' ).append( $swiperNavButtons );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$swiperNavButtonsWrap.append( $swiperNavButtons );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $wrapControls ) {\n\t\t\t\t\t\t\t$wrapControls.append( $swiperNavButtonsWrap );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$sliderInner.append( $swiperNavButtonsWrap );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tswiperOptions.navigation = {\n\t\t\t\t\t\tnextEl: $swiperNext,\n\t\t\t\t\t\tprevEl: $swiperPrev\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.pagination ) {\n\t\t\t\t\tvar $swiperPaginationWrap = $( '<div class=\"swiper-pagination-wrap\"><div class=\"swiper-pagination-inner\"></div></div>' );\n\t\t\t\t\tvar $swiperPagination = $( '<div class=\"swiper-pagination\"></div>' );\n\n\t\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( $swiperPagination );\n\n\t\t\t\t\tvar $swiperPaginationContainerWrap = $( '<div class=\"swiper-pagination-container\"></div>' );\n\n\t\t\t\t\tif ( 'grid' == sliderSettings.paginationAlignedBy ) {\n\t\t\t\t\t\t$swiperPaginationContainerWrap.append( '<div class=\"container\"><div class=\"row\"><div class=\"col-sm-12\"></div></div></div>' );\n\t\t\t\t\t\t$swiperPaginationContainerWrap.find( '.col-sm-12' ).append( $swiperPaginationWrap );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$swiperPaginationContainerWrap.append( $swiperPaginationWrap );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $wrapControls ) {\n\t\t\t\t\t\t$wrapControls.append( $swiperPaginationContainerWrap );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$slider.append( $swiperPaginationContainerWrap );\n\t\t\t\t\t}\n\n\t\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\t\tel: $swiperPagination,\n\t\t\t\t\t\ttype: sliderSettings.paginationType ? sliderSettings.paginationType : 'bullets',\n\t\t\t\t\t\tclickable: true\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( sliderSettings.paginationDynamicBullets ) {\n\t\t\t\t\t\tswiperOptions.pagination.dynamicBullets = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $slider.hasClass( 'pagination-style-04' ) ) {\n\t\t\t\t\t\tvar $swiperAltArrows = $( '<div class=\"swiper-alt-arrow-button swiper-alt-arrow-prev\" data-action=\"prev\"></div><div class=\"swiper-alt-arrow-button swiper-alt-arrow-next\" data-action=\"next\"></div>' );\n\n\t\t\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( $swiperAltArrows );\n\n\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"text\">' + sliderSettings.paginationText + '</div><div class=\"current\">' + current + '</div><div class=\"separator\">/</div><div class=\"total\">' + total + '</div></div>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-03' ) ) {\n\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\tvar currentStr = addLeadingZero( current ),\n\t\t\t\t\t\t\t    totalStr   = addLeadingZero( total );\n\n\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"current\">' + currentStr + '</div><div class=\"separator\"></div><div class=\"total\">' + totalStr + '</div></div>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-06' ) ) {\n\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"current\">' + current + '<div class=\"separator\">/</div></div><div class=\"total\">' + total + '</div></div>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-07' ) ) {\n\t\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\t\tvar indexStr = addLeadingZero( index + 1 );\n\n\t\t\t\t\t\t\treturn '<span class=\"' + className + '\">' + indexStr + '<span class=\"dot\">.</span></span>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-08' ) ) {\n\t\t\t\t\t\tvar $swiperAltArrows = $( '<div class=\"swiper-alt-arrow-button swiper-alt-arrow-prev\" data-action=\"prev\"></div><div class=\"swiper-alt-arrow-button swiper-alt-arrow-next\" data-action=\"next\"></div>' );\n\n\t\t\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( $swiperAltArrows );\n\n\t\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\t\treturn '<span class=\"' + className + '\"></span>';\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.mousewheel ) {\n\t\t\t\t\tswiperOptions.mousewheel = {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.vertical ) {\n\t\t\t\t\tswiperOptions.direction = 'vertical';\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.slideToClickedSlide ) {\n\t\t\t\t\tswiperOptions.slideToClickedSlide = true;\n\t\t\t\t\tswiperOptions.touchRatio = 0.2;\n\t\t\t\t}\n\n\t\t\t\t$swiper = new Swiper( $sliderContainer, swiperOptions );\n\n\t\t\t\tif ( sliderSettings.layerTransition ) {\n\t\t\t\t\t$swiper.on( 'init', function() {\n\t\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * index = $swiper.activeIndex;\n\t\t\t\t\t\t * currentSlide = slides.eq( index );\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * Work properly if slides per view is greater than 1\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar currentSlide = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\t\tcurrentSlide.addClass( 'animated' );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'slideChangeTransitionEnd', function() {\n\t\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * index = $swiper.activeIndex;\n\t\t\t\t\t\t * currentSlide = slides.eq( index );\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * Work properly if slides per view is greater than 1\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\t\tvisibleSlides.addClass( 'animated' );\n\n\t\t\t\t\t\tslides.removeClass( 'swiper-ken-burn-active' );\n\t\t\t\t\t\tvisibleSlides.addClass( 'swiper-ken-burn-active' );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'slideChangeTransitionStart', function() {\n\t\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t\tslides.removeClass( 'animated' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.vertical && sliderSettings.verticalAutoHeight ) {\n\t\t\t\t\t$swiper.on( 'init', function() {\n\t\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'transitionEnd', function() {\n\t\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'resize', function() {\n\t\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t$swiper.on( 'resize', function() {\n\t\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\n\t\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\t\t\t\t} );\n\n\t\t\t\t/**\n\t\t\t\t * Use beforeInit instead of init to avoid broken slider view auto.\n\t\t\t\t * Updated: On some cases Normal per views return \"auto\" instead of real per view on beforeInit\n\t\t\t\t * then we needed init event to avoid broken render.\n\t\t\t\t */\n\t\t\t\t$swiper.on( 'beforeInit', function() {\n\t\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\t\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'init', function() {\n\t\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\t\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\n\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\tvisibleSlides.addClass( 'minimog-slide-active' );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'slideChangeTransitionEnd', function() {\n\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\tvisibleSlides.addClass( 'minimog-slide-active' );\n\t\t\t\t} );\n\n\t\t\t\t/**\n\t\t\t\t * Hide pagination if slider has only bullet\n\t\t\t\t */\n\t\t\t\t$swiper.on( 'paginationRender', function() {\n\t\t\t\t\tvar slidesLength = $swiper.virtual && $swiper.params.virtual.enabled ? $swiper.virtual.slides.length : $swiper.slides.length;\n\t\t\t\t\tvar numberOfBullets = $swiper.params.loop ? Math.ceil( (\n\t\t\t\t\t\t                                                       slidesLength - (\n\t\t\t\t\t\t\t                                                       $swiper.loopedSlides * 2\n\t\t\t\t\t\t                                                       )\n\t\t\t\t\t                                                       ) / $swiper.params.slidesPerGroup ) : $swiper.snapGrid.length;\n\n\t\t\t\t\tvar $wrapper = $( $swiper.$wrapperEl ).closest( '.tm-swiper' );\n\t\t\t\t\tnumberOfBullets > 1 ? $wrapper.removeClass( 'pagination-hidden' ) : $wrapper.addClass( 'pagination-hidden' );\n\t\t\t\t} );\n\n\t\t\t\tif ( sliderSettings.centered ) {\n\t\t\t\t\t$swiper.on( 'slideChangeTransitionStart', function() {\n\t\t\t\t\t\t$swiper.$wrapperEl.find( '.swiper-slide' ).removeClass( 'swiper-slide-centered swiper-slide-uncentered' );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'transitionEnd', function() {\n\t\t\t\t\t\tfindCenteredSlides( this, $swiper.$wrapperEl.find( '.swiper-slide' ) );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'update', function() {\n\t\t\t\t\t\tvar swiper = this;\n\n\t\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t\t\t//slides.removeClass( 'swiper-slide-uncentered swiper-slide-centered' );\n\n\t\t\t\t\t\t\tfindCenteredSlides( swiper, slides );\n\t\t\t\t\t\t}, 500 ); // Delay to sure swiper layout render completed.\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If lazy load + retina enable.\n\t\t\t\tif ( $.fn.laziestloader ) {\n\t\t\t\t\t$slider.elementorWaypoint( function() {\n\t\t\t\t\t\tvar _self    = this.element ? this.element : this,\n\t\t\t\t\t\t    $self    = $( _self ),\n\t\t\t\t\t\t    llImages = $self.find( '.ll-image' );\n\n\t\t\t\t\t\tif ( llImages.length > 0 ) {\n\t\t\t\t\t\t\tllImages.laziestloader( {}, function() {\n\t\t\t\t\t\t\t\t$( this ).unwrap( '.minimog-lazy-image' );\n\t\t\t\t\t\t\t} ).trigger( 'laziestloader' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.destroy(); // trigger once.\n\t\t\t\t\t}, {\n\t\t\t\t\t\toffset: '90%'\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Center Mode Handler\n\t\t\t\t */\n\t\t\t\tif ( sliderSettings.centeredHightlight && 'scale' === sliderSettings.centeredHightlight ) {\n\t\t\t\t\t$swiper.on( 'beforeInit resize', function() {\n\t\t\t\t\t\tsetSlideHeightCenterMode( this );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t$swiper.init();\n\n\t\t\t\tif ( $slider.hasClass( 'pagination-style-04' ) || $slider.hasClass( 'pagination-style-08' ) ) {\n\t\t\t\t\t$slider.on( 'click', '.swiper-alt-arrow-button', function() {\n\t\t\t\t\t\t'prev' === $( this ).data( 'action' ) ? $swiper.slidePrev() : $swiper.slideNext();\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t$( document ).trigger( 'MinimogSwiperInit', [ $swiper, $slider, swiperOptions ] );\n\t\t\t} );\n\n\t\t\treturn $swiper;\n\t\t};\n\n\t\tfunction getBreakpoints( forElementor = false ) {\n\t\t\tif ( forElementor ) {\n\t\t\t\tif ( window.minimogSwiperBP.elementor ) {\n\t\t\t\t\treturn window.minimogSwiperBP.elementor\n\t\t\t\t} else {\n\t\t\t\t\tvar breakpoints      = elementorFrontendConfig.responsive.breakpoints,\n\t\t\t\t\t    finalBreakpoints = {},\n\t\t\t\t\t    previousBP       = 0,\n\t\t\t\t\t    lastBP           = '',\n\t\t\t\t\t    lastBPValue      = 0;\n\n\t\t\t\t\tfor ( const key in breakpoints ) {\n\t\t\t\t\t\tif ( breakpoints.hasOwnProperty( key ) && breakpoints[ key ].is_enabled ) {\n\n\t\t\t\t\t\t\tlastBP = key;\n\n\t\t\t\t\t\t\tvar bpValue = previousBP + 1;\n\n\t\t\t\t\t\t\tlastBPValue = bpValue;\n\t\t\t\t\t\t\tpreviousBP = breakpoints[ key ].value;\n\n\t\t\t\t\t\t\tif ( 'mobile' === key ) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfinalBreakpoints[ bpValue ] = {\n\t\t\t\t\t\t\t\tname: key\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'widescreen' === lastBP ) {\n\t\t\t\t\t\tfinalBreakpoints[ lastBPValue ].name = 'desktop';\n\t\t\t\t\t\tfinalBreakpoints[ breakpoints[ 'widescreen' ].value ] = {\n\t\t\t\t\t\t\tname: 'widescreen'\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfinalBreakpoints[ previousBP + 1 ] = {\n\t\t\t\t\t\t\tname: 'desktop'\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.minimogSwiperBP.elementor = finalBreakpoints;\n\n\t\t\t\t\treturn window.minimogSwiperBP.elementor;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn window.minimogSwiperBP.defaults;\n\t\t\t}\n\t\t}\n\n\t\tfunction getSwiperBreakpoints( items, itemsGroup, gutter, forElementor = false ) {\n\t\t\tvar breakpoints              = getBreakpoints( forElementor ),\n\t\t\t    swiperBreakpointSettings = {};\n\n\t\t\tfor ( const key in breakpoints ) {\n\t\t\t\tvar name = breakpoints[ key ].name;\n\n\t\t\t\tswiperBreakpointSettings[ key ] = {\n\t\t\t\t\tslidesPerView: items[ name ],\n\t\t\t\t\tslidesPerGroup: itemsGroup[ name ],\n\t\t\t\t\tspaceBetween: gutter[ name ],\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn swiperBreakpointSettings;\n\t\t}\n\n\t\tfunction addLeadingZero( number ) {\n\t\t\t// Convert to string.\n\t\t\tnumber = number.toString();\n\n\t\t\t// Add leading 0.\n\t\t\treturn number.padStart( 2, '0' );\n\t\t}\n\n\t\tfunction parseNumberValue( setting = '', defaultValue = '' ) {\n\t\t\tif ( undefined === setting || '' === setting || isNaN( setting ) ) {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\n\t\t\treturn parseInt( setting );\n\t\t}\n\n\t\tfunction parseItemValue( setting = '', defaultValue = '' ) {\n\t\t\tif ( undefined === setting || '' === setting ) {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\n\t\t\t// Normalize slide per view, reset fake view to exist view.\n\t\t\tif ( 'auto-fixed' === setting ) {\n\t\t\t\treturn 'auto';\n\t\t\t}\n\n\t\t\treturn setting;\n\t\t}\n\n\t\tfunction parseItemGroupValue( setting = '', inherit, itemsPerView ) {\n\t\t\tif ( 'auto' === itemsPerView ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( 'auto' === inherit ) {\n\t\t\t\tinherit = 1;\n\t\t\t} else if ( 'inherit' === inherit || parseInt( inherit ) > parseInt( itemsPerView ) ) {\n\t\t\t\tinherit = itemsPerView;\n\t\t\t}\n\n\t\t\tif ( undefined === setting || '' === setting ) {\n\t\t\t\treturn inherit || 1;\n\t\t\t} else if ( 'inherit' === setting ) {\n\t\t\t\treturn itemsPerView || 1;\n\t\t\t}\n\n\t\t\treturn parseInt( setting );\n\t\t}\n\n\t\tfunction setSlideHeight( swiper ) {\n\t\t\tvar slides = swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\tslides.css( { height: 'auto' } );\n\n\t\t\tvar currentSlide  = swiper.activeIndex,\n\t\t\t    itemHeight    = $( swiper.slides[ currentSlide ] ).height(),\n\t\t\t    slidesPerView = swiper.params.slidesPerView,\n\t\t\t    spaceBetween  = swiper.params.spaceBetween,\n\t\t\t    wrapperHeight = slidesPerView * itemHeight + (\n\t\t\t\t    slidesPerView - 1\n\t\t\t    ) * spaceBetween;\n\n\t\t\t$( swiper.$el ).height( wrapperHeight );\n\t\t\t$( swiper.$wrapperEl ).find( '.swiper-slide' ).height( itemHeight );\n\n\t\t\tswiper.update();\n\t\t}\n\n\t\tfunction setSlideHeightCenterMode( swiper ) {\n\t\t\tvar slides = swiper.$wrapperEl.find( '.swiper-slide' ).each( function() {\n\t\t\t\tvar $thisSlide = $( this );\n\t\t\t\t$thisSlide.css( '--placeholder-height', $thisSlide.children().height() + 'px' );\n\t\t\t} );\n\t\t}\n\n\t\tfunction findCenteredSlides( swiper, slides ) {\n\t\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' ),\n\t\t\t    elOffsetLeft  = $( swiper.$el ).offset().left,\n\t\t\t    elOffsetRight = elOffsetLeft + $( swiper.$el ).outerWidth();\n\n\t\t\tvisibleSlides.each( function() {\n\t\t\t\tvar thisSlideOffsetLeft  = $( this ).offset().left - 1,\n\t\t\t\t    thisSlideOffsetRight = $( this ).offset().left + 1 + $( this ).outerWidth();\n\n\t\t\t\tif ( thisSlideOffsetLeft > elOffsetLeft && thisSlideOffsetRight < elOffsetRight ) {\n\t\t\t\t\t$( this ).addClass( 'swiper-slide-centered' ).removeClass( 'swiper-slide-uncentered' );\n\t\t\t\t} else {\n\t\t\t\t\t$( this ).removeClass( 'swiper-slide-centered' ).addClass( 'swiper-slide-uncentered' );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}( jQuery )\n);\n"]}